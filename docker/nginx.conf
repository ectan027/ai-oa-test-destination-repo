events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    
    # Docker internal DNS resolver
    resolver 127.0.0.11 valid=30s;
    
    # Real IP from Cloudflare
    set_real_ip_from 173.245.48.0/20;
    set_real_ip_from 103.21.244.0/22;
    set_real_ip_from 103.22.200.0/22;
    set_real_ip_from 103.31.4.0/22;
    set_real_ip_from 141.101.64.0/18;
    set_real_ip_from 108.162.192.0/18;
    set_real_ip_from 190.93.240.0/20;
    set_real_ip_from 188.114.96.0/20;
    set_real_ip_from 197.234.240.0/22;
    set_real_ip_from 198.41.128.0/17;
    set_real_ip_from 162.158.0.0/15;
    set_real_ip_from 104.16.0.0/13;
    set_real_ip_from 104.24.0.0/14;
    set_real_ip_from 172.64.0.0/13;
    set_real_ip_from 131.0.72.0/22;
    real_ip_header CF-Connecting-IP;
    
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # Extract instance name from subdomain
    map $host $instance_name {
        ~^(instance-\d+)\.verihire\.me$ $1;
        default "";
    }

    # Cookie flags based on scheme (for Set-Cookie)
    map $scheme $consent_cookie_flags {
        https "SameSite=None; Secure";
        default "SameSite=Lax";
    }

    # Consent cookie checker (use direct cookie var for reliability)
    map $cookie_aoa_consent $has_consent {
        default 0;
        "1" 1;
    }

    # One-time folder redirect computation (avoid nested ifs)
    # Is root path
    map $request_uri $is_root {
        default 0;
        "/"     1;
    }

    # Has open arg (folder or workspace present â†’ no redirect needed)
    map "$arg_folder$arg_workspace" $has_open_arg {
        default 1;
        ""      0;
    }

    # Compute redirect: root AND no open arg AND no prior folder cookie
    map "$is_root|$has_open_arg|$cookie_aoa_folder" $folder_redirect {
        default "";
        "1|0|" "/?folder=/home/coder/project";
    }

    # Base domain - placeholder until Vercel is ready
    server {
        listen 80;
        server_name verihire.me;
        
        location / {
            # Temporary placeholder - update when Vercel is ready
            return 200 'Coming Soon - Verihire Assessment Platform';
            add_header Content-Type text/plain;
            
            # When ready, replace above with:
            # return 301 https://your-vercel-url.vercel.app$request_uri;
        }
    }

    # Handle instance subdomains
    server {
        listen 80;
        server_name *.verihire.me;

        # Route to the appropriate container based on subdomain
        location / {
            # Only proceed if we have a valid instance name
            if ($instance_name = "") {
                return 404;
            }
            # Gate behind consent screen (read cookie directly)
            if ($cookie_aoa_consent != 1) {
                # Avoid infinite loops: always send to consent root with a simple return path
                add_header X-AOA-Consent "missing:$cookie_aoa_consent" always;
                return 302 /consent.html?return=/;
            }
            
            # One-time redirect to open project folder (no nested if)
            if ($folder_redirect) {
                add_header Set-Cookie "aoa_folder=1; Path=/; Domain=.verihire.me; Max-Age=3600; $consent_cookie_flags" always;
                return 302 $folder_redirect;
            }
            
            # Explicitly allow clipboard APIs and relax CSP for the IDE
            add_header Permissions-Policy "clipboard-read=(self), clipboard-write=(self)" always;
            add_header Content-Security-Policy "default-src 'self' 'unsafe-inline' 'unsafe-eval' data: blob:;" always;

            proxy_pass http://$instance_name:80;
            proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_redirect off;
        }

        # Serve consent page statically from nginx
        location = /consent.html {
            root /usr/share/nginx/html;
            add_header Cache-Control "no-store";
        }

        # Server-side cookie setter to avoid client-side cookie issues
        location = /consent-continue {
            # Set cookie for parent domain so all instance subdomains receive it
            add_header Set-Cookie "aoa_consent=1; Path=/; Domain=.verihire.me; Max-Age=1800; $consent_cookie_flags" always;
            # Always go to root; folder redirect logic will handle opening workspace
            return 302 /;
        }
    }
}